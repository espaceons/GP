# Generated by Django 5.2.3 on 2025-06-24 14:36

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('formateurs', '0001_initial'),
        ('formations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_etudiant', models.CharField(default='26909EB9', help_text="Identifiant unique de l'étudiant", max_length=20, unique=True, verbose_name='Numéro étudiant')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, validators=[django.core.validators.RegexValidator(message='Format de téléphone invalide', regex='^\\+?[0-9]{9,15}$')], verbose_name='Téléphone')),
                ('adresse', models.TextField(blank=True, null=True, verbose_name='Adresse')),
                ('ville', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ville')),
                ('code_postal', models.CharField(blank=True, max_length=10, null=True, verbose_name='Code postal')),
                ('pays', models.CharField(blank=True, default='France', max_length=100, null=True, verbose_name='Pays')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Dernière mise à jour')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='eleve', to=settings.AUTH_USER_MODEL, verbose_name='Compte utilisateur')),
            ],
            options={
                'verbose_name': 'Élève',
                'verbose_name_plural': 'Élèves',
                'ordering': ['user__last_name', 'user__first_name'],
                'permissions': [('can_view_dashboard', 'Peut accéder au tableau de bord élève')],
            },
        ),
        migrations.CreateModel(
            name='DocumentEleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(choices=[('cv', 'CV'), ('lm', 'Lettre de motivation'), ('diplome', 'Diplôme'), ('autre', 'Autre')], max_length=50, verbose_name='Type de document')),
                ('fichier', models.FileField(upload_to='eleves/documents/', verbose_name='Fichier')),
                ('date_depot', models.DateTimeField(auto_now_add=True, verbose_name='Date de dépôt')),
                ('valide', models.BooleanField(default=False, verbose_name='Validé')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='eleves.eleve', verbose_name='Élève')),
            ],
            options={
                'verbose_name': 'Document élève',
                'verbose_name_plural': 'Documents élèves',
            },
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_inscription', models.DateTimeField(auto_now_add=True, verbose_name="Date d'inscription")),
                ('date_debut', models.DateField(blank=True, null=True, verbose_name='Date de début')),
                ('date_fin', models.DateField(blank=True, null=True, verbose_name='Date de fin')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('valide', 'Validée'), ('refuse', 'Refusée'), ('abandon', 'Abandon'), ('termine', 'Terminée')], default='en_attente', max_length=20, verbose_name='Statut')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes administratives')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to='eleves.eleve', verbose_name='Élève')),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to='formations.formation', verbose_name='Formation')),
            ],
            options={
                'verbose_name': 'Inscription',
                'verbose_name_plural': 'Inscriptions',
                'ordering': ['-date_inscription'],
                'unique_together': {('eleve', 'formation')},
            },
        ),
        migrations.AddField(
            model_name='eleve',
            name='formations',
            field=models.ManyToManyField(related_name='eleves', through='eleves.Inscription', to='formations.formation', verbose_name='Formations suivies'),
        ),
        migrations.CreateModel(
            name='SuiviPedagogique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_entretien', models.DateTimeField(auto_now_add=True, verbose_name="Date de l'entretien")),
                ('notes', models.TextField(verbose_name='Notes pédagogiques')),
                ('objectifs', models.TextField(blank=True, null=True, verbose_name='Objectifs pédagogiques')),
                ('evaluation', models.TextField(blank=True, null=True, verbose_name='Évaluation')),
                ('eleve', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivis', to='eleves.eleve', verbose_name='Élève')),
                ('formateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='formateurs.formateur', verbose_name='Référent pédagogique')),
            ],
            options={
                'verbose_name': 'Suivi pédagogique',
                'verbose_name_plural': 'Suivis pédagogiques',
                'ordering': ['-date_entretien'],
            },
        ),
    ]
